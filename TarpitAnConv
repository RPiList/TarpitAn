import java.io.File
import java.io.FileWriter
import java.io.IOException
import java.io.InputStream

val Liste1 = mutableListOf<String>()
val Liste2 = mutableListOf<String>()

val path = System.getProperty("user.dir")
var fileName = "tarpit.log"
var fileName2 = "log.txt"
var fileName3 = "error.txt"
var zaehler: Long = 0
var message3 = " Reading Log-File."
var message4 = " Conversion."
var message5 = " Writing Log-File."
var message6 = " Process finished. \r"

fun main(args: Array<String>) {

    println(" ")

    println(message3)
    val inputStream: InputStream = File(path + File.separator + fileName).inputStream()
    inputStream.bufferedReader().forEachLine { Liste1.add(it) }

    println(message4)
    Liste1.forEach { datenaufbereitung(it) }

    print(message5)
    println(" ")
    schreiben()
    println(" ")
    print(message6)
}
fun datenaufbereitung(zeile: String) {

    if (zeile.contains(",") ) {

        val wert1: String = zeile.replace(" INFO     TarpitServer: Client ('", "," )
        val wert2: String = wert1.replace("', ", "," )
        val wert3: String = wert2.replace(") ", "," )
        Liste2.add(wert3)
        zaehler = zaehler + 1
    }
}

fun schreiben() {

    try {
        val fw = FileWriter(path  + File.separator + fileName2, true)

    var zaehler2: Long  = 0
    Liste2.forEach { (it)
        zaehler2 = zaehler2 + 1

        val text = it  + System.getProperty("line.separator")
            fw.write(text)

        var percentage = (zaehler2.toDouble() / zaehler.toDouble()) * 100
        var prozent: Int = percentage.toInt()
        print( "   " + prozent.toString() + "% \r")
        }
                fw.close()
            } catch (e: IOException) {
            }
}
